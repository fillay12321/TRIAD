---
import BaseLayout from '@layouts/BaseLayout.astro';
const baseRaw = import.meta.env.BASE_URL || '/';
const base = baseRaw.endsWith('/') ? baseRaw : baseRaw + '/';
const withBase = (path: string) => base + path.replace(/^\/+/, '');
---
<BaseLayout title="Structure — TRIAD">
  <section class="relative mx-auto max-w-6xl px-4 py-12 space-y-8">
    <div class="pointer-events-none absolute inset-0 opacity-30 [mask-image:radial-gradient(70%_60%_at_50%_30%,black,transparent)]">
      <div class="absolute -inset-24 bg-[radial-gradient(circle_at_top_right,rgba(124,156,255,0.18),transparent_60%)]"></div>
      <div class="absolute -inset-24 bg-[radial-gradient(circle_at_bottom_left,rgba(0,255,200,0.10),transparent_60%)]"></div>
    </div>

    <div class="relative">
      <h1 class="text-3xl md:text-4xl font-bold tracking-tight">Repository structure</h1>
      <p class="mt-2 text-mist md:text-lg">Below is the current source tree and the purpose of key TRIAD modules.</p>

      <div class="mt-6 rounded-xl border border-white/10 bg-white/5 p-5">
        <h2 class="text-white font-semibold">Directory tree</h2>
        <pre class="mt-3 rounded-lg border border-white/10 p-4 text-xs md:text-sm overflow-auto"><code>TRIAD/
├── Cargo.toml
├── src/
│   ├── bin/
│   │   └── triad-node.rs
│   ├── dag/
│   │   └── mod.rs
│   ├── error_analysis/
│   │   ├── mod.rs
│   │   └── semantic.rs
│   ├── github/
│   │   └── mod.rs
│   ├── network/
│   │   ├── discovery/
│   │   ├── error.rs
│   │   ├── error_analysis.rs
│   │   ├── handler.rs
│   │   ├── message.rs
│   │   ├── mod.rs
│   │   ├── node.rs
│   │   ├── peer.rs
│   │   ├── quantum_handler.rs
│   │   ├── real_node.rs
│   │   ├── transport.rs
│   │   ├── types.rs
│   │   ├── websocket_client.rs
│   │   └── websocket_server.rs
│   ├── quantum/
│   │   ├── consensus.rs
│   │   ├── field.rs
│   │   ├── interference.rs
│   │   ├── kernels/
│   │   ├── mod.rs
│   │   ├── opencl.rs
│   │   ├── prob_ops.rs
│   │   └── tests.rs
│   ├── semantic/
│   │   └── mod.rs
│   ├── sharding/
│   │   ├── mod.rs
│   │   └── test_sharding.rs
│   ├── token/
│   │   └── mod.rs
│   ├── transaction/
│   │   ├── mod.rs
│   │   ├── processor.rs
│   │   └── storage.rs
│   ├── lib.rs
│   └── main.rs
├── examples/
│   └── quantum_consensus_demo.rs
└── README.md</code></pre>
      </div>

      <div class="mt-8 grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        <article class="rounded-xl border border-white/10 bg-white/5 p-5">
          <h3 class="text-white font-semibold">DAG</h3>
          <p class="mt-1 text-mist text-sm">Causal model and parallel event appends without a global total order.</p>
          <p class="mt-2 text-xs text-white/70">Files: <code>src/dag/mod.rs</code></p>
        </article>

        <article class="rounded-xl border border-white/10 bg-white/5 p-5">
          <h3 class="text-white font-semibold">Quantum</h3>
          <p class="mt-1 text-mist text-sm">Physical model of consensus: transaction waves, interference, probabilistic ops, optional OpenCL kernels.</p>
          <p class="mt-2 text-xs text-white/70">Files: <code>src/quantum/consensus.rs</code>, <code>field.rs</code>, <code>interference.rs</code>, <code>opencl.rs</code>, <code>prob_ops.rs</code></p>
        </article>

        <article class="rounded-xl border border-white/10 bg-white/5 p-5">
          <h3 class="text-white font-semibold">Network</h3>
          <p class="mt-1 text-mist text-sm">Networking stack, message handling, peer discovery, transports, WebSocket client/server. Fixed build issues in discovery/handler.</p>
          <p class="mt-2 text-xs text-white/70">Files: <code>src/network/*</code></p>
        </article>

        <article class="rounded-xl border border-white/10 bg-white/5 p-5">
          <h3 class="text-white font-semibold">Transaction</h3>
          <p class="mt-1 text-mist text-sm">Transaction model, batch processing, and storage. Ready for batch signature verification.</p>
          <p class="mt-2 text-xs text-white/70">Files: <code>src/transaction/mod.rs</code>, <code>processor.rs</code>, <code>storage.rs</code></p>
        </article>

        <article class="rounded-xl border border-white/10 bg-white/5 p-5">
          <h3 class="text-white font-semibold">Sharding</h3>
          <p class="mt-1 text-mist text-sm">Mechanics of multiple shards and their tests. Parallel processing by default.</p>
          <p class="mt-2 text-xs text-white/70">Files: <code>src/sharding/mod.rs</code>, <code>test_sharding.rs</code></p>
        </article>

        <article class="rounded-xl border border-white/10 bg-white/5 p-5">
          <h3 class="text-white font-semibold">Error analysis</h3>
          <p class="mt-1 text-mist text-sm">Diagnostics and semantic robustness analysis, pattern checks, and explainability.</p>
          <p class="mt-2 text-xs text-white/70">Files: <code>src/error_analysis/mod.rs</code>, <code>semantic.rs</code>, <code>src/semantic/mod.rs</code></p>
        </article>

        <article class="rounded-xl border border-white/10 bg-white/5 p-5">
          <h3 class="text-white font-semibold">Token</h3>
          <p class="mt-1 text-mist text-sm">Basic token/asset structures and integration with transactions.</p>
          <p class="mt-2 text-xs text-white/70">Files: <code>src/token/mod.rs</code></p>
        </article>

        <article class="rounded-xl border border-white/10 bg-white/5 p-5">
          <h3 class="text-white font-semibold">Binaries and entrypoints</h3>
          <p class="mt-1 text-mist text-sm">CLI entrypoints and the main executable code.</p>
          <p class="mt-2 text-xs text-white/70">Files: <code>src/bin/triad-node.rs</code>, <code>src/main.rs</code>, <code>src/lib.rs</code></p>
        </article>

        <article class="rounded-xl border border-white/10 bg-white/5 p-5">
          <h3 class="text-white font-semibold">Examples</h3>
          <p class="mt-1 text-mist text-sm">Demo scenarios and quick consensus start.</p>
          <p class="mt-2 text-xs text-white/70">Files: <code>examples/quantum_consensus_demo.rs</code></p>
        </article>
      </div>

      <div class="mt-8">
        <a href={withBase('github')} class="inline-flex items-center gap-2 rounded-lg bg-white/10 px-4 py-2 text-white hover:bg-white/15 transition">Open repository →</a>
      </div>
    </div>
  </section>
</BaseLayout>
