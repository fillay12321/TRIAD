---
import BaseLayout from '@layouts/BaseLayout.astro';
---
<BaseLayout title="Contacts ‚Äî TRIAD">
  <section class="relative">
    <!-- Soft gradient backdrop -->
    <div class="pointer-events-none absolute inset-0 opacity-30 [mask-image:radial-gradient(70%_60%_at_50%_30%,black,transparent)]">
      <div class="absolute -inset-24 bg-[radial-gradient(circle_at_top_right,rgba(124,156,255,0.25),transparent_60%)]"></div>
      <div class="absolute -inset-24 bg-[radial-gradient(circle_at_bottom_left,rgba(0,255,200,0.15),transparent_60%)]"></div>
    </div>

    <div class="relative mx-auto max-w-6xl px-4 py-12">
      <header class="mb-8">
        <h1 class="text-3xl md:text-4xl font-bold tracking-tight">Contacts</h1>
        <p class="mt-3 text-mist max-w-3xl">Get in touch for collaboration, feedback, or to participate in TRIAD development. We are open to dialogue ‚Äî send us an email or create an issue on GitHub.</p>
      </header>

      <div class="grid gap-6 md:grid-cols-2">
        <!-- Email card -->
        <article class="contact-card group rounded-xl border border-white/10 bg-white/5/40 backdrop-blur p-5 transition-all duration-300 will-change-transform opacity-0 translate-y-4 hover:-translate-y-1 hover:border-white/30 hover:shadow-[0_10px_40px_-10px_rgba(124,156,255,0.45)]">
          <div class="mb-3 inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/10 ring-1 ring-white/20 text-white/90">‚úâÔ∏è</div>
          <h2 class="text-lg font-semibold text-white">Email</h2>
          <p class="mt-2 text-mist">For quick questions and proposals. We will get back to you as soon as possible.</p>
          <div class="mt-3 flex items-center gap-3">
            <a class="inline-flex items-center rounded-lg border border-white/20 bg-white/10 px-3 py-1.5 text-sm hover:bg-white/15" href="mailto:keshashel@gmail.com">Write</a>
            <button class="copy-btn inline-flex items-center rounded-lg border border-white/20 bg-white/5 px-3 py-1.5 text-sm hover:bg-white/10" data-copy="keshashel@gmail.com">Copy</button>
          </div>
          <p class="mt-2 text-xs text-white/60 select-all">keshashel@gmail.com</p>
        </article>

        <!-- X (Twitter) card -->
        <article class="contact-card group rounded-xl border border-white/10 bg-white/5/40 backdrop-blur p-5 transition-all duration-300 will-change-transform opacity-0 translate-y-4 hover:-translate-y-1 hover:border-white/30 hover:shadow-[0_10px_40px_-10px_rgba(124,156,255,0.45)]">
          <div class="mb-3 inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/10 ring-1 ring-white/20 text-white/90">ùïè</div>
          <h2 class="text-lg font-semibold text-white">X (Twitter)</h2>
          <p class="mt-2 text-mist">Project news, short updates, and release announcements.</p>
          <div class="mt-3 flex items-center gap-3">
            <a class="inline-flex items-center rounded-lg border border-white/20 bg-white/10 px-3 py-1.5 text-sm hover:bg-white/15" href="https://x.com/TRIADBlockchain" target="_blank" rel="noopener">Open</a>
            <button class="copy-btn inline-flex items-center rounded-lg border border-white/20 bg-white/5 px-3 py-1.5 text-sm hover:bg-white/10" data-copy="https://x.com/TRIADBlockchain">Copy</button>
          </div>
          <p class="mt-2 text-xs text-white/60 select-all">x.com/TRIADBlockchain</p>
        </article>
      </div>

      <script is:inline>
        // Reveal animation
        const cards = Array.from(document.querySelectorAll('.contact-card'));
        if (cards.length) {
          const io = new IntersectionObserver((entries) => {
            entries.forEach((e) => {
              if (e.isIntersecting) {
                e.target.classList.remove('opacity-0','translate-y-4');
                e.target.classList.add('opacity-100','translate-y-0');
                io.unobserve(e.target);
              }
            });
          }, { threshold: 0.15, rootMargin: '0px 0px -10% 0px' });
          cards.forEach((c, i) => {
            c.style.transitionDelay = `${Math.min(i*60, 240)}ms`;
            io.observe(c);
          });
        }

        // Copy buttons
        document.querySelectorAll('.copy-btn').forEach(btn => {
          btn.addEventListener('click', async () => {
            const val = btn.getAttribute('data-copy') || '';
            try {
              await navigator.clipboard.writeText(val);
              btn.textContent = 'Copied';
              setTimeout(() => btn.textContent = 'Copy', 1400);
            } catch (_) {
              // Fallback: select text by showing alert
              alert('Copy manually: ' + val);
            }
          });
        });

        // Form handler removed
      </script>
    </div>
  </section>
</BaseLayout>
